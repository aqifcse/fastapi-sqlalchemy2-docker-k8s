name: CI/CD Pipeline for FastAPI

on:
  push:
    branches:
      - main

jobs:
  # 1. Linting and Testing
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pip install pytest
          pytest

  # 2. Build and Push Docker Image
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker buildx build --tag ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest --tag ${{ secrets.DOCKER_USERNAME }}/fastapi-app:${{ github.sha }} .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:${{ github.sha }}

  # 3. Deploy to Kubernetes
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Set kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/db.yaml
